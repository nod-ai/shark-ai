# Copyright 2024 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: PkgCI - shark-ai

on:
  workflow_call:
    inputs:
      artifact_run_id:
        type: string
        default: ""
  workflow_dispatch:
    inputs:
      artifact_run_id:
        type: string
        description: "Id for a workflow run that produced dev packages"
        default: ""

jobs:
  test_shortfin_llm_server:
    name: "Integration Tests - Shortfin LLM Server"
    strategy:
      matrix:
        version: [3.11]
        test_device: ["cpu", "gfx90a", "gfx942"] # temporarily not running on "gfx942" due to contention with other ci tasks
      fail-fast: false
    runs-on: >-
      ${{
        matrix.test_device == 'cpu' && 'azure-cpubuilder-linux-scale' ||
        matrix.test_device == 'gfx942' && 'linux-mi300-gpu-1' ||
        matrix.test_device == 'gfx90a' && 'nodai-amdgpu-mi250-x86-64'
      }}
    defaults:
      run:
        shell: bash
    env:
      PACKAGE_DOWNLOAD_DIR: ${{ github.workspace }}/.packages
      VENV_DIR: ${{ github.workspace }}/.venv
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: "Setting up Python"
        id: setup_python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{matrix.version}}

      - name: Setup UV caching
        run: |
          CACHE_DIR="${GITHUB_WORKSPACE}/.uv-cache"
          echo "UV_CACHE_DIR=${CACHE_DIR}" >> $GITHUB_ENV
          mkdir -p "${CACHE_DIR}"

      - name: Cache UV packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: .uv-cache
          key: ${{ runner.os }}-uv-py${{ matrix.version }}-${{ hashFiles('requirements-iree-pinned.txt', 'pytorch-cpu-requirements.txt', 'sharktank/requirements.txt', 'sharktank/requirements-tests.txt', 'shortfin/requirements-tests.txt') }}

      - name: Download package artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: snapshot-*-linux-x86_64-*
          path: ${{ env.PACKAGE_DOWNLOAD_DIR }}
          merge-multiple: true

      - name: Setup venv
        run: |
          ./build_tools/pkgci/setup_venv.py ${VENV_DIR} \
            --artifact-path=${PACKAGE_DOWNLOAD_DIR} \
            --fetch-gh-workflow=${{ inputs.artifact_run_id }}

      - name: Install pinned IREE packages
        run: |
          source ${VENV_DIR}/bin/activate
          uv pip install -r requirements-iree-pinned.txt

      - name: Run LLM Integration Tests
        run: |
          source ${VENV_DIR}/bin/activate
          pytest -v -s --test_device=${{ matrix.test_device }} app_tests/integration_tests/llm/shortfin --log-cli-level=INFO
