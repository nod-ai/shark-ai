# Copyright 2024 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: Shortfin Developer Tools Tests

on:
  workflow_dispatch:
  schedule:
    # Run weekly to ensure our tools remain functional
    - cron: '0 0 * * 0'
  pull_request:
    paths:
      - '.github/workflows/ci-shortfin-developer-tool-tests.yml'
      - 'app_tests/integration_tests/llm/shortfin/tracing_test.py'
      - 'shortfin/**'

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit). The workflow name is prepended to avoid conflicts between
  # different workflows.
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  shortfin_tracing_test:
    name: "Shortfin Tracing Test"
    strategy:
      matrix:
        version: [3.11]
      fail-fast: false
    runs-on: linux-mi300-1gpu-ossci
    defaults:
      run:
        shell: bash
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
      ARTIFACTS_DIR: ${{ github.workspace }}/artifacts
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Setting up Python"
        id: setup_python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{matrix.version}}

      - name: Create Python venv
        run: python -m venv ${VENV_DIR}

      - name: Install pip deps
        run: |
          source ${VENV_DIR}/bin/activate
          python -m pip install --no-compile --upgrade pip

          # Install dependencies in multiple steps to manage requirements properly
          pip install --no-compile -r pytorch-cpu-requirements.txt
          pip install -r requirements-iree-unpinned.txt

          # Install Shortfin with tracing enabled
          SHORTFIN_ENABLE_TRACING=ON pip install --no-compile \
            -r sharktank/requirements-tests.txt \
            -r shortfin/requirements-tests.txt \
            -e sharktank/ shortfin/

          pip freeze

      - name: Create artifacts directory
        run: mkdir -p ${ARTIFACTS_DIR}

      - name: Run Tracing Tests
        run: |
          source ${VENV_DIR}/bin/activate
          # Set environment variables for tracing
          export SHORTFIN_PY_RUNTIME=tracy
          # Run only the tracing test
          TEST_OUTPUT_DIR=${ARTIFACTS_DIR} pytest -v app_tests/integration_tests/llm/shortfin/tracing_test.py --test_device=cpu --log-cli-level=INFO

      - name: Upload Trace Artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: tracy-capture
          path: ${{ env.ARTIFACTS_DIR }}/capture.tracy
          if-no-files-found: error
