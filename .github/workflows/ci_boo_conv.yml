# Copyright 2024 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: Run conv shape

on:
  workflow_dispatch:
  schedule:
  # Weekdays at 11:00 AM UTC = 03:00 AM PST / 04:00 AM PDT
  - cron: "0 10 * * *"

permissions:
  contents: write

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit). The workflow name is prepended to avoid conflicts between
  # different workflows.
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  test_llama_large:
    if: ${{ github.repository_owner == 'nod-ai' || github.event_name != 'schedule' }}
    timeout-minutes: 240
    name: "Run boo: conv shape"
    strategy:
      matrix:
        version: [ 3.11 ]
      fail-fast: false
    runs-on: linux-mi325-8gpu-ossci-nod-ai
    defaults:
      run:
        shell: bash
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
      OFFLINE_SERVING: DISABLED
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: "Setting up Python"
      id: setup_python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{matrix.version}}
    - name: Create Python venv
      run: |
        python -m venv ${VENV_DIR}
        source ${VENV_DIR}/bin/activate

    - name: Install pip deps
      run: |
        mkdir -p output_artifacts
        git clone https://github.com/iree-org/iree-turbine.git
        cd iree-turbine
        pip install -r pytorch-rocm-requirements.txt
        pip install -r requirements.txt -e .
        pip freeze | grep 'iree' > $(pwd)/../output_artifacts/version.txt
        iree-compile --version >> $(pwd)/../output_artifacts/version.txt
        cd -

    - name: Run all proxy config
      run: |
       git clone --filter=blob:none --no-checkout https://x-access-token:${{ secrets.SHARK_AI_REPORTS_GITHUB_TOKEN }}@github.com/nod-ai/shark-ai-reports.git
       cd shark-ai-reports
       git sparse-checkout init --cone
       git sparse-checkout set boo/all_proxy_config.txt boo/prod_conv_config.txt
       git checkout main
       cd -
       cd iree-turbine
       export ROCR_VISIBLE_DEVICES="0,1,2,3,4,5,6,7"
       echo "Running all proxy config without tuning"
       export BOO_TUNING_SPEC_PATH=""
       python iree/turbine/kernel/boo/driver/driver.py --gpu-id=-1 --commands-file ../shark-ai-reports/boo/all_proxy_config.txt --csv ../output_artifacts/all_proxy_run_without_tuning.csv
       echo "Running all proxy config with tuning"
       export BOO_TUNING_SPEC_PATH="iree/turbine/kernel/boo/runtime/tuning_specs.mlir"
       python iree/turbine/kernel/boo/driver/driver.py --gpu-id=-1 --commands-file ../shark-ai-reports/boo/all_proxy_config.txt --csv ../output_artifacts/all_proxy_run_with_tuning.csv
       export BOO_TUNING_SPEC_PATH=""
       echo "Running prod conv config without tuning"
       python iree/turbine/kernel/boo/driver/driver.py --gpu-id=-1 --commands-file ../shark-ai-reports/boo/prod_conv_config.txt --csv ../output_artifacts/prod_conv_config_without_tuning.csv
       export BOO_TUNING_SPEC_PATH="iree/turbine/kernel/boo/runtime/tuning_specs.mlir"
       echo "Running prod conv config with tuning"
       python iree/turbine/kernel/boo/driver/driver.py --gpu-id=-1 --commands-file ../shark-ai-reports/boo/prod_conv_config.txt --csv ../output_artifacts/prod_conv_config_with_tuning.csv

    - name: Deploy to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4.0.0
      with:
        github_token: ${{ secrets.SHARK_PLATFORM_GH_TOKEN }}
        publish_dir: ./out/llm/llama/benchmark
        destination_dir: ./llm/llama/benchmark
        keep_files: true

    - name: Upload llama executable files
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: llama-files
        path: ${{ github.workspace }}/${{ steps.date.outputs.date }}

    - name: Upload log files
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: llama-logs
        path: |
          output_artifacts/*.csv
          output_artifacts/version.txt


  # New job to push logs to shark-ai-reports repository
  push_logs:
    name: "Push log for conv run"
    needs: [ test_llama_large ]
    if: always()
    runs-on: ubuntu-24.04
    steps:
    - name: Download log artifacts
      uses: actions/download-artifact@v4
      with:
        name: llama-logs
        path: logs

    - name: Checkout Target Repo
      if: always()
      uses: actions/checkout@v4
      with:
        repository: nod-ai/shark-ai-reports
        token: ${{ secrets.SHARK_AI_REPORTS_GITHUB_TOKEN }}
        path: shark-ai-reports

    - name: Push artifacts
      if: always()
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email ""
        date=$(date -u +'%Y-%m-%d')
        mkdir -p "shark-ai-reports/boo/$date/"
        cp -v logs/*.csv "shark-ai-reports/boo/$date/" || true
        cp -v logs/version.txt "shark-ai-reports/boo/$date/"
        cd shark-ai-reports/boo
        git pull
        git add $date
        git commit -m "Add conv report on $(date -u +'%Y-%m-%d')"
        git push origin main
        rm -rf ../logs
