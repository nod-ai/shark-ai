# Copyright 2024 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: CI - Mistral Nightly

on:
  workflow_dispatch:
  pull_request:
  schedule:
    # Run daily at 2:00 AM UTC
    - cron: "0 2 * * *"
permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  build-and-test:
    if: ${{ github.repository_owner == 'nod-ai' || github.event_name != 'schedule' }}
    name: "Build and Test Docker Image"
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    env:
      DOCKER_IMAGE: shark-ai-nightly
      DOCKER_TAG: ${{ github.sha }}
      RESULTS_DIR: ./test-results
      RESULTS_BRANCH: nightly-results
      RESULTS_FILE: mistral-test-results.md
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v3.1.0

      # - name: Build Docker image
      #   run: |
      #     docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} -f Dockerfile .
      #     docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest

      # - name: Run tests in Docker
      #   run: |
      #     mkdir -p ${RESULTS_DIR}
      #     docker run --rm \
      #       -v ${RESULTS_DIR}:/results \
      #       ${DOCKER_IMAGE}:${DOCKER_TAG} \
      #       python -m pytest tests/ -v --junitxml=/results/test-results.xml

      # - name: Store test results
      #   uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      #   with:
      #     name: test-results
      #     path: ${RESULTS_DIR}

      # - name: Setup Git for results branch
      #   run: |
      #     git config --global user.name "GitHub Actions"
      #     git config --global user.email "actions@github.com"

      #     # Create and switch to results branch if it doesn't exist
      #     git checkout -B ${RESULTS_BRANCH} || git checkout ${RESULTS_BRANCH}

      #     # Create results directory if it doesn't exist
      #     mkdir -p results

      - name: Generate and update results
        run: |
          # Make the script executable
          chmod +x scripts/generate_test_results.sh

          # Generate and append results
          sh ./scripts/generate_test_results.sh scripts/test_output.txt results/${RESULTS_FILE}

          # Set Git identity for CI
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          # Create and switch to results branch if it doesn't exist
          git fetch origin
          if git show-ref --quiet refs/heads/${RESULTS_BRANCH}; then
            git checkout ${RESULTS_BRANCH}
          else
            git checkout -b ${RESULTS_BRANCH}
          fi

          # Commit and push changes
          git add results/${RESULTS_FILE}
          git commit -m "Update Mistral test results [skip ci]"
          git push origin ${RESULTS_BRANCH}

      # - name: Push Docker image
      #   if: ${{ github.event_name == 'schedule' }}
      #   run: |
      #     echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      #     docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
      #     docker push ${DOCKER_IMAGE}:latest

    permissions:
      contents: write
