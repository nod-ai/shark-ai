# Copyright 2024 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: CI - Mistral Nightly

on:
  workflow_dispatch:
  pull_request:
  schedule:
    # Run daily at 2:00 AM UTC
    - cron: "0 2 * * *"
permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  build-and-test:
    if: ${{ github.repository_owner == 'nod-ai' || github.event_name != 'schedule' }}
    name: "Build and Test Docker Image"
    runs-on: [linux-mi300-1gpu-ossci-nod-ai]
    defaults:
      run:
        shell: bash
    env:
      DOCKER_IMAGE: shortfin-mistral
      DOCKER_TAG: ${{ github.sha }}
      WEIGHTS_DIR: /shark-dev/ci/mistral/weights
      BENCHMARKS_BRANCH: nightly-results
      IREE_BENCHMARKS_FILE: iree_benchmarks.md
      CLI_BENCHMARKS_FILE: cli_benchmarks.md
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set CONFIG_DIR with date
        run: |
          export DATE=$(date +%Y-%m-%d)
          echo "CONFIG_DIR=/shark-dev/ci/mistral/config/$DATE" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker buildx build \
            --cache-from=type=registry,ref=ghcr.io/nod-ai/shark-ai/${DOCKER_IMAGE}:buildcache \
            --cache-to=type=registry,ref=ghcr.io/nod-ai/shark-ai/${DOCKER_IMAGE}:buildcache,mode=max \
            -t ${DOCKER_IMAGE}:${DOCKER_TAG} \
            -f docker/mistral/Dockerfile .
          docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest

      - name: Tag Docker image for GHCR
        run: |
          docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ghcr.io/nod-ai/shark-ai/${DOCKER_IMAGE}:${DOCKER_TAG}
          docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ghcr.io/nod-ai/shark-ai/${DOCKER_IMAGE}:latest

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/nod-ai/shark-ai/${DOCKER_IMAGE}:${DOCKER_TAG}
          docker push ghcr.io/nod-ai/shark-ai/${DOCKER_IMAGE}:latest

      - name: Build artifacts and run benchmarks
        run: |
          echo "CONFIG_DIR: ${{ env.CONFIG_DIR }}"
          mkdir -p ${BENCHMARKS_DIR}
          docker run --name ${DOCKER_IMAGE} --rm -p=9020:8000 --device=/dev/kfd --device=/dev/dri \
          --group-add video --cap-add=SYS_PTRACE --security-opt seccomp=unconfined \
          -v ${WEIGHTS_DIR}:/weights \
          -v ${{ env.CONFIG_DIR }}:/config  ${DOCKER_IMAGE}:${DOCKER_TAG} >> output.txt

      - name: Generate and update results
        run: |
          # Set Git identity for CI
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          # Create and switch to results branch if it doesn't exist
          git fetch origin
          if git show-ref --quiet refs/heads/${BENCHMARKS_BRANCH}; then
            git checkout ${BENCHMARKS_BRANCH}
            git merge origin/main
          else
            git checkout -b ${BENCHMARKS_BRANCH}
          fi

          # Generate and append results
          sh docker/mistral/generate_test_results.sh output.txt ${IREE_BENCHMARKS_FILE} ${CLI_BENCHMARKS_FILE}

          # Commit and push changes
          git add ${IREE_BENCHMARKS_FILE} ${CLI_BENCHMARKS_FILE}
          git commit -m "Update Mistral test results [skip ci]"
          git push origin ${BENCHMARKS_BRANCH}

    permissions:
      contents: write
