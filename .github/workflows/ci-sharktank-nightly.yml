# Copyright 2024 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: CI - sharktank nightly

on:
  workflow_dispatch:
  schedule:
    # Weekdays at 11:00 AM UTC = 03:00 AM PST / 04:00 AM PDT
    - cron: "0 11 * * 1-5"

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit). The workflow name is prepended to avoid conflicts between
  # different workflows.
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  nightly-mi325x:
    if: ${{ github.repository_owner == 'nod-ai' || github.event_name != 'schedule' }}
    name: "Nightly MI325X"
    strategy:
      matrix:
        python-version: [3.11]
        torch-version: ["2.6.0"]
        runs-on: [linux-mi325-1gpu-ossci-nod-ai]
      fail-fast: false
    runs-on: ${{matrix.runs-on}}
    defaults:
      run:
        shell: bash
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
      HF_HOME: "/shark-cache/data/huggingface"
      HF_TOKEN: ${{ secrets.HF_FLUX_TOKEN }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Setting up Python"
        id: setup_python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{matrix.python-version}}

      - name: Create Python venv
        run: python -m venv ${VENV_DIR}

      - name: Install sharktank deps
        run: |
          source ${VENV_DIR}/bin/activate
          sharktank/build_tools/install_test_dependencies.sh \
            --torch-version ${{matrix.torch-version}} \
            --iree-unpinned
          pip freeze

      - name: Run tests
        continue-on-error: true
      # TODO: unify with-*-data flags into a single flag and make it possible to run
      # only tests that require data.
      # We would still want the separate flags as we may endup with data being
      # scattered on different CI machines.
        run: |
          source ${VENV_DIR}/bin/activate
          pytest \
            -v \
            --log-cli-level=info \
            --with-clip-data \
            --with-flux-data \
            --with-t5-data \
            --with-vae-data \
            --iree-hal-target-device=hip \
            --iree-hip-target=gfx942 \
            --iree-device=hip://0 \
            sharktank/tests \
            --durations=0 \
            -m "expensive" \
            --timeout=800

      - name: Run integration tests
        run: |
          source ${VENV_DIR}/bin/activate
          pytest \
            --test-data-dir=/shark-dev \
            --iree-hal-target-device=hip \
            --iree-hip-target=gfx942 \
            --iree-device=hip://0 \
            --device='cuda:0' \
            -v \
            --log-cli-level=info \
            --durations=0 \
            -m "expensive" \
            --timeout=800 \
            sharktank/integration

  llm-test:
    if: ${{ github.repository_owner == 'nod-ai' || github.event_name != 'schedule' }}
    name: "LLM evaluation"
    strategy:
      matrix:
        python-version: [3.11]
        torch-version: ["2.6.0"]
        runs-on: [linux-mi325-1gpu-ossci-nod-ai]
      fail-fast: false
    runs-on: ${{matrix.runs-on}}
    defaults:
      run:
        shell: bash
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Setting up Python"
        id: setup_python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{matrix.python-version}}
      - name: Create Python venv
        run: python -m venv ${VENV_DIR}

      - name: Install sharktank deps
        run: |
          source ${VENV_DIR}/bin/activate
          sharktank/build_tools/install_test_dependencies.sh \
            --torch-version ${{matrix.torch-version}} \
            --pytorch-rocm \
            --iree-unpinned
          pip freeze

      - name: Run Perplexity tests
        run: |
          source ${VENV_DIR}/bin/activate
          mkdir perplexity_ci_artifacts
          python -m sharktank.models.deepseek.toy_deepseek -o "perplexity_ci_artifacts/toy_deepseek.irpa"
          pytest \
            -n 8 \
            -v \
            -s \
            sharktank/tests/evaluate/ \
            --run-nightly-test \
            --bs=32 \
            --device='cuda:0' \
            --iree-device=hip://0 \
            --iree-hip-target=gfx942 \
            --iree-hal-target-device=hip \
            --llama3-8b-f16-model-path=/shark-dev/data/llama3.1/weights/8b/fp16/llama3.1_8b_fp16_instruct.irpa \
            --llama3-8b-f8-model-path=/shark-dev/8b/fp8/attnf8/native_fp8_e4m3fnuz_llama3_8b.irpa \
            --llama3-8b-tokenizer-path=/shark-dev/data/llama3.1/weights/8b/fp16/tokenizer_config.json \
            --html=out/llm/llama/perplexity/index.html \
            --log-cli-level=INFO

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4.0.0
        with:
          github_token: ${{ secrets.SHARK_PLATFORM_GH_TOKEN }}
          publish_dir: ./out/llm/llama/perplexity
          destination_dir: ./llm/llama/perplexity
          keep_files: true
